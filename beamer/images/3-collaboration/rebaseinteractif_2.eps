%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 485 150
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, March 24, 2019 at 7:26:27 PM Central European Standard Time
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
485 150 setpagesize
0 0 0 0 setmargins
0 0 setorigin
485 150 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
485.000 0.00000 l
485.000 150.000 l
0.00000 150.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
485.000 0.00000 l
485.000 150.000 l
0.00000 150.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 485 150 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -290.000 -105.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
290.000 105.000 m
775.000 105.000 l
775.000 255.000 l
290.000 255.000 l
290.000 105.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -290.000 -105.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -290.000 -105.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -290.000 -105.000 ] defaultmatrix matrix concatmatrix setmatrix
q
1.00000 .600000 0.00000 RG
newpath
532.500 119.000 m
577.500 119.000 l
577.500 125.000 l
577.500 131.667 574.167 135.000 567.500 135.000  c
542.500 135.000 l
535.833 135.000 532.500 131.667 532.500 125.000  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [532.5 104.0 532.5 121.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9019608 0.7490196]
         /C1 [1.0 0.6784314 0.2]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
532.500 115.000 m
532.500 108.333 535.833 105.000 542.500 105.000  c
567.500 105.000 l
574.167 105.000 577.500 108.333 577.500 115.000  c
577.500 120.000 l
532.500 120.000 l
h
f
1.00000 .941176 .850980 RG
2.00000 w
newpath
534.500 115.000 m
534.500 109.667 537.167 107.000 542.500 107.000  c
567.500 107.000 l
572.833 107.000 575.500 109.667 575.500 115.000  c
575.500 125.000 l
575.500 130.333 572.833 133.000 567.500 133.000  c
542.500 133.000 l
537.167 133.000 534.500 130.333 534.500 125.000  c
h
S
1.00000 .600000 0.00000 RG
1.00000 w
newpath
534.500 115.000 m
534.500 109.667 537.167 107.000 542.500 107.000  c
567.500 107.000 l
572.833 107.000 575.500 109.667 575.500 115.000  c
575.500 125.000 l
575.500 130.333 572.833 133.000 567.500 133.000  c
542.500 133.000 l
537.167 133.000 534.500 130.333 534.500 125.000  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
619.283 116.373 m
619.283 119.670 l
620.768 119.670 l
621.320 119.670 621.747 119.529 622.049 119.248  c
622.351 118.956 622.502 118.545 622.502 118.014  c
622.502 117.493 622.351 117.092 622.049 116.811  c
621.747 116.519 621.320 116.373 620.768 116.373  c
619.283 116.373 l
h
618.096 115.404 m
620.768 115.404 l
621.757 115.404 622.502 115.628 623.002 116.076  c
623.502 116.514 623.752 117.160 623.752 118.014  c
623.752 118.878 623.502 119.535 623.002 119.982  c
622.502 120.420 621.757 120.639 620.768 120.639  c
619.283 120.639 l
619.283 124.154 l
618.096 124.154 l
618.096 115.404 l
h
629.098 118.592 m
628.973 118.529 628.837 118.482 628.691 118.451  c
628.556 118.410 628.400 118.389 628.223 118.389  c
627.618 118.389 627.150 118.587 626.816 118.982  c
626.493 119.378 626.332 119.951 626.332 120.701  c
626.332 124.154 l
625.254 124.154 l
625.254 117.592 l
626.332 117.592 l
626.332 118.607 l
626.561 118.212 626.858 117.920 627.223 117.732  c
627.587 117.535 628.030 117.436 628.551 117.436  c
628.624 117.436 628.702 117.441 628.785 117.451  c
628.879 117.462 628.978 117.477 629.082 117.498  c
629.098 118.592 l
h
635.844 120.607 m
635.844 121.123 l
630.875 121.123 l
630.927 121.873 631.151 122.441 631.547 122.826  c
631.953 123.212 632.510 123.404 633.219 123.404  c
633.635 123.404 634.036 123.357 634.422 123.264  c
634.818 123.160 635.208 123.003 635.594 122.795  c
635.594 123.826 l
635.198 123.982 634.797 124.102 634.391 124.186  c
633.984 124.279 633.573 124.326 633.156 124.326  c
632.115 124.326 631.286 124.024 630.672 123.420  c
630.057 122.805 629.750 121.977 629.750 120.936  c
629.750 119.863 630.042 119.014 630.625 118.389  c
631.208 117.753 631.990 117.436 632.969 117.436  c
633.854 117.436 634.552 117.722 635.062 118.295  c
635.583 118.857 635.844 119.628 635.844 120.607  c
h
634.766 120.279 m
634.755 119.696 634.589 119.227 634.266 118.873  c
633.943 118.519 633.516 118.342 632.984 118.342  c
632.380 118.342 631.896 118.514 631.531 118.857  c
631.177 119.201 630.974 119.680 630.922 120.295  c
634.766 120.279 l
h
633.906 114.561 m
635.078 114.561 l
633.172 116.764 l
632.266 116.764 l
633.906 114.561 l
h
642.336 117.842 m
642.336 118.857 l
642.023 118.680 641.716 118.550 641.414 118.467  c
641.112 118.383 640.805 118.342 640.492 118.342  c
639.784 118.342 639.237 118.566 638.852 119.014  c
638.466 119.451 638.273 120.071 638.273 120.873  c
638.273 121.675 638.466 122.300 638.852 122.748  c
639.237 123.186 639.784 123.404 640.492 123.404  c
640.805 123.404 641.112 123.363 641.414 123.279  c
641.716 123.196 642.023 123.071 642.336 122.904  c
642.336 123.904 l
642.034 124.040 641.721 124.144 641.398 124.217  c
641.076 124.290 640.732 124.326 640.367 124.326  c
639.378 124.326 638.591 124.019 638.008 123.404  c
637.424 122.779 637.133 121.936 637.133 120.873  c
637.133 119.811 637.424 118.972 638.008 118.357  c
638.602 117.743 639.414 117.436 640.445 117.436  c
640.768 117.436 641.086 117.472 641.398 117.545  c
641.721 117.607 642.034 117.706 642.336 117.842  c
h
649.668 120.186 m
649.668 124.154 l
648.590 124.154 l
648.590 120.232 l
648.590 119.607 648.465 119.144 648.215 118.842  c
647.975 118.529 647.616 118.373 647.137 118.373  c
646.553 118.373 646.090 118.561 645.746 118.936  c
645.413 119.300 645.246 119.805 645.246 120.451  c
645.246 124.154 l
644.168 124.154 l
644.168 115.029 l
645.246 115.029 l
645.246 118.607 l
645.507 118.212 645.809 117.920 646.152 117.732  c
646.507 117.535 646.913 117.436 647.371 117.436  c
648.121 117.436 648.689 117.670 649.074 118.139  c
649.470 118.597 649.668 119.279 649.668 120.186  c
h
654.789 120.857 m
653.924 120.857 653.320 120.956 652.977 121.154  c
652.643 121.352 652.477 121.691 652.477 122.170  c
652.477 122.555 652.602 122.863 652.852 123.092  c
653.112 123.311 653.456 123.420 653.883 123.420  c
654.487 123.420 654.966 123.212 655.320 122.795  c
655.685 122.368 655.867 121.800 655.867 121.092  c
655.867 120.857 l
654.789 120.857 l
h
656.945 120.404 m
656.945 124.154 l
655.867 124.154 l
655.867 123.154 l
655.617 123.550 655.310 123.847 654.945 124.045  c
654.581 124.232 654.133 124.326 653.602 124.326  c
652.924 124.326 652.388 124.139 651.992 123.764  c
651.596 123.378 651.398 122.873 651.398 122.248  c
651.398 121.508 651.643 120.951 652.133 120.576  c
652.633 120.201 653.372 120.014 654.352 120.014  c
655.867 120.014 l
655.867 119.904 l
655.867 119.404 655.701 119.019 655.367 118.748  c
655.044 118.477 654.591 118.342 654.008 118.342  c
653.633 118.342 653.263 118.389 652.898 118.482  c
652.544 118.576 652.206 118.712 651.883 118.889  c
651.883 117.889 l
652.279 117.732 652.659 117.618 653.023 117.545  c
653.398 117.472 653.763 117.436 654.117 117.436  c
655.065 117.436 655.773 117.680 656.242 118.170  c
656.711 118.660 656.945 119.404 656.945 120.404  c
h
659.049 121.561 m
659.049 117.592 l
660.127 117.592 l
660.127 121.529 l
660.127 122.144 660.247 122.607 660.486 122.920  c
660.736 123.232 661.101 123.389 661.580 123.389  c
662.163 123.389 662.622 123.206 662.955 122.842  c
663.299 122.467 663.471 121.956 663.471 121.311  c
663.471 117.592 l
664.549 117.592 l
664.549 124.154 l
663.471 124.154 l
663.471 123.139 l
663.210 123.545 662.908 123.847 662.564 124.045  c
662.221 124.232 661.820 124.326 661.361 124.326  c
660.601 124.326 660.023 124.092 659.627 123.623  c
659.242 123.154 659.049 122.467 659.049 121.561  c
h
661.768 117.436 m
661.768 117.436 l
h
670.092 115.029 m
670.092 115.936 l
669.061 115.936 l
668.675 115.936 668.404 116.014 668.248 116.170  c
668.102 116.326 668.029 116.607 668.029 117.014  c
668.029 117.592 l
669.811 117.592 l
669.811 118.436 l
668.029 118.436 l
668.029 124.154 l
666.951 124.154 l
666.951 118.436 l
665.920 118.436 l
665.920 117.592 l
666.951 117.592 l
666.951 117.139 l
666.951 116.410 667.118 115.878 667.451 115.545  c
667.795 115.201 668.337 115.029 669.076 115.029  c
670.092 115.029 l
h
674.316 115.029 m
674.316 115.936 l
673.285 115.936 l
672.900 115.936 672.629 116.014 672.473 116.170  c
672.327 116.326 672.254 116.607 672.254 117.014  c
672.254 117.592 l
674.035 117.592 l
674.035 118.436 l
672.254 118.436 l
672.254 124.154 l
671.176 124.154 l
671.176 118.436 l
670.145 118.436 l
670.145 117.592 l
671.176 117.592 l
671.176 117.139 l
671.176 116.410 671.342 115.878 671.676 115.545  c
672.020 115.201 672.561 115.029 673.301 115.029  c
674.316 115.029 l
h
680.838 120.607 m
680.838 121.123 l
675.869 121.123 l
675.921 121.873 676.145 122.441 676.541 122.826  c
676.947 123.212 677.505 123.404 678.213 123.404  c
678.630 123.404 679.031 123.357 679.416 123.264  c
679.812 123.160 680.202 123.003 680.588 122.795  c
680.588 123.826 l
680.192 123.982 679.791 124.102 679.385 124.186  c
678.979 124.279 678.567 124.326 678.150 124.326  c
677.109 124.326 676.281 124.024 675.666 123.420  c
675.051 122.805 674.744 121.977 674.744 120.936  c
674.744 119.863 675.036 119.014 675.619 118.389  c
676.202 117.753 676.984 117.436 677.963 117.436  c
678.848 117.436 679.546 117.722 680.057 118.295  c
680.577 118.857 680.838 119.628 680.838 120.607  c
h
679.760 120.279 m
679.749 119.696 679.583 119.227 679.260 118.873  c
678.937 118.519 678.510 118.342 677.979 118.342  c
677.374 118.342 676.890 118.514 676.525 118.857  c
676.171 119.201 675.968 119.680 675.916 120.295  c
679.760 120.279 l
h
686.408 118.592 m
686.283 118.529 686.148 118.482 686.002 118.451  c
685.867 118.410 685.710 118.389 685.533 118.389  c
684.929 118.389 684.460 118.587 684.127 118.982  c
683.804 119.378 683.643 119.951 683.643 120.701  c
683.643 124.154 l
682.564 124.154 l
682.564 117.592 l
683.643 117.592 l
683.643 118.607 l
683.872 118.212 684.169 117.920 684.533 117.732  c
684.898 117.535 685.340 117.436 685.861 117.436  c
685.934 117.436 686.012 117.441 686.096 117.451  c
686.189 117.462 686.288 117.477 686.393 117.498  c
686.408 118.592 l
h
691.344 115.029 m
692.422 115.029 l
692.422 124.154 l
691.344 124.154 l
691.344 115.029 l
h
700.303 120.607 m
700.303 121.123 l
695.334 121.123 l
695.386 121.873 695.610 122.441 696.006 122.826  c
696.412 123.212 696.969 123.404 697.678 123.404  c
698.094 123.404 698.495 123.357 698.881 123.264  c
699.277 123.160 699.667 123.003 700.053 122.795  c
700.053 123.826 l
699.657 123.982 699.256 124.102 698.850 124.186  c
698.443 124.279 698.032 124.326 697.615 124.326  c
696.574 124.326 695.745 124.024 695.131 123.420  c
694.516 122.805 694.209 121.977 694.209 120.936  c
694.209 119.863 694.501 119.014 695.084 118.389  c
695.667 117.753 696.449 117.436 697.428 117.436  c
698.313 117.436 699.011 117.722 699.521 118.295  c
700.042 118.857 700.303 119.628 700.303 120.607  c
h
699.225 120.279 m
699.214 119.696 699.048 119.227 698.725 118.873  c
698.402 118.519 697.975 118.342 697.443 118.342  c
696.839 118.342 696.355 118.514 695.990 118.857  c
695.636 119.201 695.433 119.680 695.381 120.295  c
699.225 120.279 l
h
709.203 115.029 m
709.203 115.936 l
708.172 115.936 l
707.786 115.936 707.516 116.014 707.359 116.170  c
707.214 116.326 707.141 116.607 707.141 117.014  c
707.141 117.592 l
708.922 117.592 l
708.922 118.436 l
707.141 118.436 l
707.141 124.154 l
706.062 124.154 l
706.062 118.436 l
705.031 118.436 l
705.031 117.592 l
706.062 117.592 l
706.062 117.139 l
706.062 116.410 706.229 115.878 706.562 115.545  c
706.906 115.201 707.448 115.029 708.188 115.029  c
709.203 115.029 l
h
712.646 118.342 m
712.074 118.342 711.615 118.571 711.271 119.029  c
710.938 119.477 710.771 120.092 710.771 120.873  c
710.771 121.665 710.938 122.285 711.271 122.732  c
711.605 123.180 712.063 123.404 712.646 123.404  c
713.219 123.404 713.673 123.180 714.006 122.732  c
714.350 122.274 714.521 121.654 714.521 120.873  c
714.521 120.102 714.350 119.488 714.006 119.029  c
713.673 118.571 713.219 118.342 712.646 118.342  c
h
712.646 117.436 m
713.584 117.436 714.318 117.743 714.850 118.357  c
715.391 118.962 715.662 119.800 715.662 120.873  c
715.662 121.946 715.391 122.790 714.850 123.404  c
714.318 124.019 713.584 124.326 712.646 124.326  c
711.709 124.326 710.969 124.019 710.428 123.404  c
709.896 122.790 709.631 121.946 709.631 120.873  c
709.631 119.800 709.896 118.962 710.428 118.357  c
710.969 117.743 711.709 117.436 712.646 117.436  c
h
717.332 121.561 m
717.332 117.592 l
718.410 117.592 l
718.410 121.529 l
718.410 122.144 718.530 122.607 718.770 122.920  c
719.020 123.232 719.384 123.389 719.863 123.389  c
720.447 123.389 720.905 123.206 721.238 122.842  c
721.582 122.467 721.754 121.956 721.754 121.311  c
721.754 117.592 l
722.832 117.592 l
722.832 124.154 l
721.754 124.154 l
721.754 123.139 l
721.493 123.545 721.191 123.847 720.848 124.045  c
720.504 124.232 720.103 124.326 719.645 124.326  c
718.884 124.326 718.306 124.092 717.910 123.623  c
717.525 123.154 717.332 122.467 717.332 121.561  c
h
720.051 117.436 m
720.051 117.436 l
h
728.859 118.592 m
728.734 118.529 728.599 118.482 728.453 118.451  c
728.318 118.410 728.161 118.389 727.984 118.389  c
727.380 118.389 726.911 118.587 726.578 118.982  c
726.255 119.378 726.094 119.951 726.094 120.701  c
726.094 124.154 l
725.016 124.154 l
725.016 117.592 l
726.094 117.592 l
726.094 118.607 l
726.323 118.212 726.620 117.920 726.984 117.732  c
727.349 117.535 727.792 117.436 728.312 117.436  c
728.385 117.436 728.464 117.441 728.547 117.451  c
728.641 117.462 728.740 117.477 728.844 117.498  c
728.859 118.592 l
h
736.779 120.857 m
735.915 120.857 735.311 120.956 734.967 121.154  c
734.633 121.352 734.467 121.691 734.467 122.170  c
734.467 122.555 734.592 122.863 734.842 123.092  c
735.102 123.311 735.446 123.420 735.873 123.420  c
736.477 123.420 736.956 123.212 737.311 122.795  c
737.675 122.368 737.857 121.800 737.857 121.092  c
737.857 120.857 l
736.779 120.857 l
h
738.936 120.404 m
738.936 124.154 l
737.857 124.154 l
737.857 123.154 l
737.607 123.550 737.300 123.847 736.936 124.045  c
736.571 124.232 736.123 124.326 735.592 124.326  c
734.915 124.326 734.378 124.139 733.982 123.764  c
733.587 123.378 733.389 122.873 733.389 122.248  c
733.389 121.508 733.633 120.951 734.123 120.576  c
734.623 120.201 735.363 120.014 736.342 120.014  c
737.857 120.014 l
737.857 119.904 l
737.857 119.404 737.691 119.019 737.357 118.748  c
737.035 118.477 736.581 118.342 735.998 118.342  c
735.623 118.342 735.253 118.389 734.889 118.482  c
734.535 118.576 734.196 118.712 733.873 118.889  c
733.873 117.889 l
734.269 117.732 734.649 117.618 735.014 117.545  c
735.389 117.472 735.753 117.436 736.107 117.436  c
737.055 117.436 737.764 117.680 738.232 118.170  c
738.701 118.660 738.936 119.404 738.936 120.404  c
h
734.826 114.561 m
736.467 116.748 l
735.576 116.748 l
733.670 114.561 l
734.826 114.561 l
h
746.135 123.154 m
750.275 123.154 l
750.275 124.154 l
744.713 124.154 l
744.713 123.154 l
745.161 122.696 745.770 122.076 746.541 121.295  c
747.322 120.503 747.812 119.993 748.010 119.764  c
748.395 119.347 748.661 118.993 748.807 118.701  c
748.963 118.399 749.041 118.107 749.041 117.826  c
749.041 117.357 748.874 116.977 748.541 116.686  c
748.218 116.394 747.796 116.248 747.275 116.248  c
746.900 116.248 746.505 116.311 746.088 116.436  c
745.682 116.561 745.244 116.758 744.775 117.029  c
744.775 115.826 l
745.255 115.639 745.697 115.498 746.104 115.404  c
746.520 115.300 746.900 115.248 747.244 115.248  c
748.150 115.248 748.874 115.477 749.416 115.936  c
749.958 116.383 750.229 116.988 750.229 117.748  c
750.229 118.102 750.161 118.441 750.025 118.764  c
749.890 119.087 749.645 119.467 749.291 119.904  c
749.187 120.019 748.874 120.347 748.354 120.889  c
747.833 121.430 747.093 122.186 746.135 123.154  c
h
755.285 116.186 m
754.681 116.186 754.223 116.488 753.910 117.092  c
753.608 117.686 753.457 118.587 753.457 119.795  c
753.457 120.993 753.608 121.894 753.910 122.498  c
754.223 123.092 754.681 123.389 755.285 123.389  c
755.900 123.389 756.358 123.092 756.660 122.498  c
756.973 121.894 757.129 120.993 757.129 119.795  c
757.129 118.587 756.973 117.686 756.660 117.092  c
756.358 116.488 755.900 116.186 755.285 116.186  c
h
755.285 115.248 m
756.264 115.248 757.014 115.639 757.535 116.420  c
758.056 117.191 758.316 118.316 758.316 119.795  c
758.316 121.264 758.056 122.389 757.535 123.170  c
757.014 123.941 756.264 124.326 755.285 124.326  c
754.306 124.326 753.556 123.941 753.035 123.170  c
752.525 122.389 752.270 121.264 752.270 119.795  c
752.270 118.316 752.525 117.191 753.035 116.420  c
753.556 115.639 754.306 115.248 755.285 115.248  c
h
762.920 116.186 m
762.316 116.186 761.857 116.488 761.545 117.092  c
761.243 117.686 761.092 118.587 761.092 119.795  c
761.092 120.993 761.243 121.894 761.545 122.498  c
761.857 123.092 762.316 123.389 762.920 123.389  c
763.535 123.389 763.993 123.092 764.295 122.498  c
764.607 121.894 764.764 120.993 764.764 119.795  c
764.764 118.587 764.607 117.686 764.295 117.092  c
763.993 116.488 763.535 116.186 762.920 116.186  c
h
762.920 115.248 m
763.899 115.248 764.649 115.639 765.170 116.420  c
765.691 117.191 765.951 118.316 765.951 119.795  c
765.951 121.264 765.691 122.389 765.170 123.170  c
764.649 123.941 763.899 124.326 762.920 124.326  c
761.941 124.326 761.191 123.941 760.670 123.170  c
760.160 122.389 759.904 121.264 759.904 119.795  c
759.904 118.316 760.160 117.191 760.670 116.420  c
761.191 115.639 761.941 115.248 762.920 115.248  c
h
769.742 115.998 m
769.430 115.998 769.164 116.107 768.945 116.326  c
768.737 116.545 768.633 116.811 768.633 117.123  c
768.633 117.436 768.737 117.696 768.945 117.904  c
769.164 118.113 769.430 118.217 769.742 118.217  c
770.055 118.217 770.315 118.113 770.523 117.904  c
770.742 117.696 770.852 117.436 770.852 117.123  c
770.852 116.811 770.742 116.545 770.523 116.326  c
770.315 116.107 770.055 115.998 769.742 115.998  c
h
769.742 115.248 m
769.992 115.248 770.232 115.295 770.461 115.389  c
770.690 115.482 770.888 115.623 771.055 115.811  c
771.242 115.977 771.378 116.175 771.461 116.404  c
771.555 116.623 771.602 116.863 771.602 117.123  c
771.602 117.633 771.419 118.071 771.055 118.436  c
770.701 118.790 770.258 118.967 769.727 118.967  c
769.206 118.967 768.768 118.795 768.414 118.451  c
768.060 118.097 767.883 117.654 767.883 117.123  c
767.883 116.602 768.060 116.160 768.414 115.795  c
768.779 115.430 769.221 115.248 769.742 115.248  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
552.667 123.154 m
554.604 123.154 l
554.604 116.482 l
552.495 116.904 l
552.495 115.826 l
554.589 115.404 l
555.776 115.404 l
555.776 123.154 l
557.714 123.154 l
557.714 124.154 l
552.667 124.154 l
552.667 123.154 l
h
f
2 J
10.0000 M
Q
q
1.00000 .800000 0.00000 RG
newpath
457.500 179.000 m
502.500 179.000 l
502.500 185.000 l
502.500 191.667 499.167 195.000 492.500 195.000  c
467.500 195.000 l
460.833 195.000 457.500 191.667 457.500 185.000  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [457.5 164.0 457.5 181.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9490196 0.7490196]
         /C1 [1.0 0.8392157 0.2]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
457.500 175.000 m
457.500 168.333 460.833 165.000 467.500 165.000  c
492.500 165.000 l
499.167 165.000 502.500 168.333 502.500 175.000  c
502.500 180.000 l
457.500 180.000 l
h
f
1.00000 .968627 .850980 RG
2.00000 w
newpath
459.500 175.000 m
459.500 169.667 462.167 167.000 467.500 167.000  c
492.500 167.000 l
497.833 167.000 500.500 169.667 500.500 175.000  c
500.500 185.000 l
500.500 190.333 497.833 193.000 492.500 193.000  c
467.500 193.000 l
462.167 193.000 459.500 190.333 459.500 185.000  c
h
S
1.00000 .800000 0.00000 RG
1.00000 w
newpath
459.500 175.000 m
459.500 169.667 462.167 167.000 467.500 167.000  c
492.500 167.000 l
497.833 167.000 500.500 169.667 500.500 175.000  c
500.500 185.000 l
500.500 190.333 497.833 193.000 492.500 193.000  c
467.500 193.000 l
462.167 193.000 459.500 190.333 459.500 185.000  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
293.221 177.420 m
298.252 177.420 l
298.252 178.420 l
294.408 178.420 l
294.408 180.998 l
297.877 180.998 l
297.877 181.998 l
294.408 181.998 l
294.408 186.170 l
293.221 186.170 l
293.221 177.420 l
h
303.061 182.873 m
302.196 182.873 301.592 182.972 301.248 183.170  c
300.915 183.368 300.748 183.706 300.748 184.186  c
300.748 184.571 300.873 184.878 301.123 185.107  c
301.383 185.326 301.727 185.436 302.154 185.436  c
302.758 185.436 303.238 185.227 303.592 184.811  c
303.956 184.383 304.139 183.816 304.139 183.107  c
304.139 182.873 l
303.061 182.873 l
h
305.217 182.420 m
305.217 186.170 l
304.139 186.170 l
304.139 185.170 l
303.889 185.566 303.581 185.863 303.217 186.061  c
302.852 186.248 302.404 186.342 301.873 186.342  c
301.196 186.342 300.660 186.154 300.264 185.779  c
299.868 185.394 299.670 184.889 299.670 184.264  c
299.670 183.524 299.915 182.967 300.404 182.592  c
300.904 182.217 301.644 182.029 302.623 182.029  c
304.139 182.029 l
304.139 181.920 l
304.139 181.420 303.972 181.035 303.639 180.764  c
303.316 180.493 302.863 180.357 302.279 180.357  c
301.904 180.357 301.535 180.404 301.170 180.498  c
300.816 180.592 300.477 180.727 300.154 180.904  c
300.154 179.904 l
300.550 179.748 300.930 179.633 301.295 179.561  c
301.670 179.488 302.035 179.451 302.389 179.451  c
303.337 179.451 304.045 179.696 304.514 180.186  c
304.982 180.675 305.217 181.420 305.217 182.420  c
h
307.430 179.607 m
308.508 179.607 l
308.508 186.170 l
307.430 186.170 l
307.430 179.607 l
h
307.430 177.045 m
308.508 177.045 l
308.508 178.420 l
307.430 178.420 l
307.430 177.045 l
h
314.576 180.607 m
314.451 180.545 314.316 180.498 314.170 180.467  c
314.035 180.425 313.878 180.404 313.701 180.404  c
313.097 180.404 312.628 180.602 312.295 180.998  c
311.972 181.394 311.811 181.967 311.811 182.717  c
311.811 186.170 l
310.732 186.170 l
310.732 179.607 l
311.811 179.607 l
311.811 180.623 l
312.040 180.227 312.337 179.936 312.701 179.748  c
313.066 179.550 313.508 179.451 314.029 179.451  c
314.102 179.451 314.180 179.456 314.264 179.467  c
314.357 179.477 314.456 179.493 314.561 179.514  c
314.576 180.607 l
h
321.322 182.623 m
321.322 183.139 l
316.354 183.139 l
316.406 183.889 316.630 184.456 317.025 184.842  c
317.432 185.227 317.989 185.420 318.697 185.420  c
319.114 185.420 319.515 185.373 319.900 185.279  c
320.296 185.175 320.687 185.019 321.072 184.811  c
321.072 185.842 l
320.676 185.998 320.275 186.118 319.869 186.201  c
319.463 186.295 319.051 186.342 318.635 186.342  c
317.593 186.342 316.765 186.040 316.150 185.436  c
315.536 184.821 315.229 183.993 315.229 182.951  c
315.229 181.878 315.520 181.029 316.104 180.404  c
316.687 179.769 317.468 179.451 318.447 179.451  c
319.333 179.451 320.031 179.738 320.541 180.311  c
321.062 180.873 321.322 181.644 321.322 182.623  c
h
320.244 182.295 m
320.234 181.712 320.067 181.243 319.744 180.889  c
319.421 180.535 318.994 180.357 318.463 180.357  c
317.859 180.357 317.374 180.529 317.010 180.873  c
316.656 181.217 316.452 181.696 316.400 182.311  c
320.244 182.295 l
h
330.223 177.045 m
330.223 177.951 l
329.191 177.951 l
328.806 177.951 328.535 178.029 328.379 178.186  c
328.233 178.342 328.160 178.623 328.160 179.029  c
328.160 179.607 l
329.941 179.607 l
329.941 180.451 l
328.160 180.451 l
328.160 186.170 l
327.082 186.170 l
327.082 180.451 l
326.051 180.451 l
326.051 179.607 l
327.082 179.607 l
327.082 179.154 l
327.082 178.425 327.249 177.894 327.582 177.561  c
327.926 177.217 328.467 177.045 329.207 177.045  c
330.223 177.045 l
h
333.666 180.357 m
333.093 180.357 332.635 180.587 332.291 181.045  c
331.958 181.493 331.791 182.107 331.791 182.889  c
331.791 183.680 331.958 184.300 332.291 184.748  c
332.624 185.196 333.083 185.420 333.666 185.420  c
334.239 185.420 334.692 185.196 335.025 184.748  c
335.369 184.290 335.541 183.670 335.541 182.889  c
335.541 182.118 335.369 181.503 335.025 181.045  c
334.692 180.587 334.239 180.357 333.666 180.357  c
h
333.666 179.451 m
334.604 179.451 335.338 179.758 335.869 180.373  c
336.411 180.977 336.682 181.816 336.682 182.889  c
336.682 183.962 336.411 184.805 335.869 185.420  c
335.338 186.035 334.604 186.342 333.666 186.342  c
332.729 186.342 331.989 186.035 331.447 185.420  c
330.916 184.805 330.650 183.962 330.650 182.889  c
330.650 181.816 330.916 180.977 331.447 180.373  c
331.989 179.758 332.729 179.451 333.666 179.451  c
h
343.930 182.201 m
343.930 186.170 l
342.852 186.170 l
342.852 182.248 l
342.852 181.623 342.727 181.160 342.477 180.857  c
342.237 180.545 341.878 180.389 341.398 180.389  c
340.815 180.389 340.352 180.576 340.008 180.951  c
339.674 181.316 339.508 181.821 339.508 182.467  c
339.508 186.170 l
338.430 186.170 l
338.430 179.607 l
339.508 179.607 l
339.508 180.623 l
339.768 180.227 340.070 179.936 340.414 179.748  c
340.768 179.550 341.174 179.451 341.633 179.451  c
342.383 179.451 342.951 179.686 343.336 180.154  c
343.732 180.613 343.930 181.295 343.930 182.201  c
h
350.395 180.607 m
350.395 177.045 l
351.473 177.045 l
351.473 186.170 l
350.395 186.170 l
350.395 185.186 l
350.165 185.571 349.879 185.863 349.535 186.061  c
349.191 186.248 348.775 186.342 348.285 186.342  c
347.493 186.342 346.848 186.024 346.348 185.389  c
345.848 184.753 345.598 183.920 345.598 182.889  c
345.598 181.857 345.848 181.029 346.348 180.404  c
346.848 179.769 347.493 179.451 348.285 179.451  c
348.775 179.451 349.191 179.545 349.535 179.732  c
349.879 179.920 350.165 180.212 350.395 180.607  c
h
346.723 182.889 m
346.723 183.680 346.884 184.305 347.207 184.764  c
347.530 185.212 347.978 185.436 348.551 185.436  c
349.124 185.436 349.572 185.212 349.895 184.764  c
350.228 184.305 350.395 183.680 350.395 182.889  c
350.395 182.097 350.228 181.477 349.895 181.029  c
349.572 180.581 349.124 180.357 348.551 180.357  c
347.978 180.357 347.530 180.581 347.207 181.029  c
346.884 181.477 346.723 182.097 346.723 182.889  c
h
357.496 180.607 m
357.371 180.545 357.236 180.498 357.090 180.467  c
356.954 180.425 356.798 180.404 356.621 180.404  c
356.017 180.404 355.548 180.602 355.215 180.998  c
354.892 181.394 354.730 181.967 354.730 182.717  c
354.730 186.170 l
353.652 186.170 l
353.652 179.607 l
354.730 179.607 l
354.730 180.623 l
354.960 180.227 355.257 179.936 355.621 179.748  c
355.986 179.550 356.428 179.451 356.949 179.451  c
357.022 179.451 357.100 179.456 357.184 179.467  c
357.277 179.477 357.376 179.493 357.480 179.514  c
357.496 180.607 l
h
364.242 182.623 m
364.242 183.139 l
359.273 183.139 l
359.326 183.889 359.549 184.456 359.945 184.842  c
360.352 185.227 360.909 185.420 361.617 185.420  c
362.034 185.420 362.435 185.373 362.820 185.279  c
363.216 185.175 363.607 185.019 363.992 184.811  c
363.992 185.842 l
363.596 185.998 363.195 186.118 362.789 186.201  c
362.383 186.295 361.971 186.342 361.555 186.342  c
360.513 186.342 359.685 186.040 359.070 185.436  c
358.456 184.821 358.148 183.993 358.148 182.951  c
358.148 181.878 358.440 181.029 359.023 180.404  c
359.607 179.769 360.388 179.451 361.367 179.451  c
362.253 179.451 362.951 179.738 363.461 180.311  c
363.982 180.873 364.242 181.644 364.242 182.623  c
h
363.164 182.295 m
363.154 181.712 362.987 181.243 362.664 180.889  c
362.341 180.535 361.914 180.357 361.383 180.357  c
360.779 180.357 360.294 180.529 359.930 180.873  c
359.576 181.217 359.372 181.696 359.320 182.311  c
363.164 182.295 l
h
369.814 177.045 m
370.893 177.045 l
370.893 186.170 l
369.814 186.170 l
369.814 177.045 l
h
378.773 182.623 m
378.773 183.139 l
373.805 183.139 l
373.857 183.889 374.081 184.456 374.477 184.842  c
374.883 185.227 375.440 185.420 376.148 185.420  c
376.565 185.420 376.966 185.373 377.352 185.279  c
377.747 185.175 378.138 185.019 378.523 184.811  c
378.523 185.842 l
378.128 185.998 377.727 186.118 377.320 186.201  c
376.914 186.295 376.503 186.342 376.086 186.342  c
375.044 186.342 374.216 186.040 373.602 185.436  c
372.987 184.821 372.680 183.993 372.680 182.951  c
372.680 181.878 372.971 181.029 373.555 180.404  c
374.138 179.769 374.919 179.451 375.898 179.451  c
376.784 179.451 377.482 179.738 377.992 180.311  c
378.513 180.873 378.773 181.644 378.773 182.623  c
h
377.695 182.295 m
377.685 181.712 377.518 181.243 377.195 180.889  c
376.872 180.535 376.445 180.357 375.914 180.357  c
375.310 180.357 374.826 180.529 374.461 180.873  c
374.107 181.217 373.904 181.696 373.852 182.311  c
377.695 182.295 l
h
389.064 182.889 m
389.064 182.097 388.898 181.477 388.564 181.029  c
388.242 180.581 387.799 180.357 387.236 180.357  c
386.663 180.357 386.210 180.581 385.877 181.029  c
385.554 181.477 385.393 182.097 385.393 182.889  c
385.393 183.680 385.554 184.305 385.877 184.764  c
386.210 185.212 386.663 185.436 387.236 185.436  c
387.799 185.436 388.242 185.212 388.564 184.764  c
388.898 184.305 389.064 183.680 389.064 182.889  c
h
385.393 180.607 m
385.622 180.212 385.908 179.920 386.252 179.732  c
386.596 179.545 387.007 179.451 387.486 179.451  c
388.288 179.451 388.939 179.769 389.439 180.404  c
389.939 181.029 390.189 181.857 390.189 182.889  c
390.189 183.920 389.939 184.753 389.439 185.389  c
388.939 186.024 388.288 186.342 387.486 186.342  c
387.007 186.342 386.596 186.248 386.252 186.061  c
385.908 185.863 385.622 185.571 385.393 185.186  c
385.393 186.170 l
384.314 186.170 l
384.314 177.045 l
385.393 177.045 l
385.393 180.607 l
h
397.588 182.623 m
397.588 183.139 l
392.619 183.139 l
392.671 183.889 392.895 184.456 393.291 184.842  c
393.697 185.227 394.255 185.420 394.963 185.420  c
395.380 185.420 395.781 185.373 396.166 185.279  c
396.562 185.175 396.952 185.019 397.338 184.811  c
397.338 185.842 l
396.942 185.998 396.541 186.118 396.135 186.201  c
395.729 186.295 395.317 186.342 394.900 186.342  c
393.859 186.342 393.031 186.040 392.416 185.436  c
391.801 184.821 391.494 183.993 391.494 182.951  c
391.494 181.878 391.786 181.029 392.369 180.404  c
392.952 179.769 393.734 179.451 394.713 179.451  c
395.598 179.451 396.296 179.738 396.807 180.311  c
397.327 180.873 397.588 181.644 397.588 182.623  c
h
396.510 182.295 m
396.499 181.712 396.333 181.243 396.010 180.889  c
395.687 180.535 395.260 180.357 394.729 180.357  c
394.124 180.357 393.640 180.529 393.275 180.873  c
392.921 181.217 392.718 181.696 392.666 182.311  c
396.510 182.295 l
h
399.236 183.576 m
399.236 179.607 l
400.314 179.607 l
400.314 183.545 l
400.314 184.160 400.434 184.623 400.674 184.936  c
400.924 185.248 401.288 185.404 401.768 185.404  c
402.351 185.404 402.809 185.222 403.143 184.857  c
403.486 184.482 403.658 183.972 403.658 183.326  c
403.658 179.607 l
404.736 179.607 l
404.736 186.170 l
403.658 186.170 l
403.658 185.154 l
403.398 185.561 403.096 185.863 402.752 186.061  c
402.408 186.248 402.007 186.342 401.549 186.342  c
400.788 186.342 400.210 186.107 399.814 185.639  c
399.429 185.170 399.236 184.482 399.236 183.576  c
h
401.955 179.451 m
401.955 179.451 l
h
410.764 180.607 m
410.639 180.545 410.503 180.498 410.357 180.467  c
410.222 180.425 410.066 180.404 409.889 180.404  c
409.285 180.404 408.816 180.602 408.482 180.998  c
408.160 181.394 407.998 181.967 407.998 182.717  c
407.998 186.170 l
406.920 186.170 l
406.920 179.607 l
407.998 179.607 l
407.998 180.623 l
408.227 180.227 408.524 179.936 408.889 179.748  c
409.253 179.550 409.696 179.451 410.217 179.451  c
410.290 179.451 410.368 179.456 410.451 179.467  c
410.545 179.477 410.644 179.493 410.748 179.514  c
410.764 180.607 l
h
415.697 180.607 m
415.572 180.545 415.437 180.498 415.291 180.467  c
415.156 180.425 414.999 180.404 414.822 180.404  c
414.218 180.404 413.749 180.602 413.416 180.998  c
413.093 181.394 412.932 181.967 412.932 182.717  c
412.932 186.170 l
411.854 186.170 l
411.854 179.607 l
412.932 179.607 l
412.932 180.623 l
413.161 180.227 413.458 179.936 413.822 179.748  c
414.187 179.550 414.630 179.451 415.150 179.451  c
415.223 179.451 415.301 179.456 415.385 179.467  c
415.479 179.477 415.577 179.493 415.682 179.514  c
415.697 180.607 l
h
422.443 182.623 m
422.443 183.139 l
417.475 183.139 l
417.527 183.889 417.751 184.456 418.146 184.842  c
418.553 185.227 419.110 185.420 419.818 185.420  c
420.235 185.420 420.636 185.373 421.021 185.279  c
421.417 185.175 421.808 185.019 422.193 184.811  c
422.193 185.842 l
421.798 185.998 421.396 186.118 420.990 186.201  c
420.584 186.295 420.173 186.342 419.756 186.342  c
418.714 186.342 417.886 186.040 417.271 185.436  c
416.657 184.821 416.350 183.993 416.350 182.951  c
416.350 181.878 416.641 181.029 417.225 180.404  c
417.808 179.769 418.589 179.451 419.568 179.451  c
420.454 179.451 421.152 179.738 421.662 180.311  c
422.183 180.873 422.443 181.644 422.443 182.623  c
h
421.365 182.295 m
421.355 181.712 421.188 181.243 420.865 180.889  c
420.542 180.535 420.115 180.357 419.584 180.357  c
418.980 180.357 418.495 180.529 418.131 180.873  c
417.777 181.217 417.574 181.696 417.521 182.311  c
421.365 182.295 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
478.479 183.154 m
482.620 183.154 l
482.620 184.154 l
477.058 184.154 l
477.058 183.154 l
477.506 182.696 478.115 182.076 478.886 181.295  c
479.667 180.503 480.157 179.993 480.354 179.764  c
480.740 179.347 481.006 178.993 481.151 178.701  c
481.308 178.399 481.386 178.107 481.386 177.826  c
481.386 177.357 481.219 176.977 480.886 176.686  c
480.563 176.394 480.141 176.248 479.620 176.248  c
479.245 176.248 478.849 176.311 478.433 176.436  c
478.026 176.561 477.589 176.758 477.120 177.029  c
477.120 175.826 l
477.599 175.639 478.042 175.498 478.448 175.404  c
478.865 175.300 479.245 175.248 479.589 175.248  c
480.495 175.248 481.219 175.477 481.761 175.936  c
482.302 176.383 482.573 176.988 482.573 177.748  c
482.573 178.102 482.506 178.441 482.370 178.764  c
482.235 179.087 481.990 179.467 481.636 179.904  c
481.532 180.019 481.219 180.347 480.698 180.889  c
480.177 181.430 479.438 182.186 478.479 183.154  c
h
f
2 J
10.0000 M
Q
q
1.00000 .800000 0.00000 RG
newpath
457.500 239.000 m
502.500 239.000 l
502.500 245.000 l
502.500 251.667 499.167 255.000 492.500 255.000  c
467.500 255.000 l
460.833 255.000 457.500 251.667 457.500 245.000  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [457.5 224.0 457.5 241.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9490196 0.7490196]
         /C1 [1.0 0.8392157 0.2]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
457.500 235.000 m
457.500 228.333 460.833 225.000 467.500 225.000  c
492.500 225.000 l
499.167 225.000 502.500 228.333 502.500 235.000  c
502.500 240.000 l
457.500 240.000 l
h
f
1.00000 .968627 .850980 RG
2.00000 w
newpath
459.500 235.000 m
459.500 229.667 462.167 227.000 467.500 227.000  c
492.500 227.000 l
497.833 227.000 500.500 229.667 500.500 235.000  c
500.500 245.000 l
500.500 250.333 497.833 253.000 492.500 253.000  c
467.500 253.000 l
462.167 253.000 459.500 250.333 459.500 245.000  c
h
S
1.00000 .800000 0.00000 RG
1.00000 w
newpath
459.500 235.000 m
459.500 229.667 462.167 227.000 467.500 227.000  c
492.500 227.000 l
497.833 227.000 500.500 229.667 500.500 235.000  c
500.500 245.000 l
500.500 250.333 497.833 253.000 492.500 253.000  c
467.500 253.000 l
462.167 253.000 459.500 250.333 459.500 245.000  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
314.451 238.592 m
312.842 242.936 l
316.061 242.936 l
314.451 238.592 l
h
313.779 237.420 m
315.123 237.420 l
318.451 246.170 l
317.217 246.170 l
316.420 243.920 l
312.482 243.920 l
311.686 246.170 l
310.436 246.170 l
313.779 237.420 l
h
319.676 239.607 m
320.754 239.607 l
320.754 246.295 l
320.754 247.128 320.592 247.732 320.270 248.107  c
319.957 248.482 319.447 248.670 318.738 248.670  c
318.332 248.670 l
318.332 247.748 l
318.629 247.748 l
319.035 247.748 319.311 247.654 319.457 247.467  c
319.603 247.279 319.676 246.889 319.676 246.295  c
319.676 239.607 l
h
319.676 237.045 m
320.754 237.045 l
320.754 238.420 l
319.676 238.420 l
319.676 237.045 l
h
325.557 240.357 m
324.984 240.357 324.525 240.587 324.182 241.045  c
323.848 241.493 323.682 242.107 323.682 242.889  c
323.682 243.680 323.848 244.300 324.182 244.748  c
324.515 245.196 324.973 245.420 325.557 245.420  c
326.130 245.420 326.583 245.196 326.916 244.748  c
327.260 244.290 327.432 243.670 327.432 242.889  c
327.432 242.118 327.260 241.503 326.916 241.045  c
326.583 240.587 326.130 240.357 325.557 240.357  c
h
325.557 239.451 m
326.494 239.451 327.229 239.758 327.760 240.373  c
328.301 240.977 328.572 241.816 328.572 242.889  c
328.572 243.962 328.301 244.805 327.760 245.420  c
327.229 246.035 326.494 246.342 325.557 246.342  c
324.619 246.342 323.880 246.035 323.338 245.420  c
322.807 244.805 322.541 243.962 322.541 242.889  c
322.541 241.816 322.807 240.977 323.338 240.373  c
323.880 239.758 324.619 239.451 325.557 239.451  c
h
330.242 243.576 m
330.242 239.607 l
331.320 239.607 l
331.320 243.545 l
331.320 244.160 331.440 244.623 331.680 244.936  c
331.930 245.248 332.294 245.404 332.773 245.404  c
333.357 245.404 333.815 245.222 334.148 244.857  c
334.492 244.482 334.664 243.972 334.664 243.326  c
334.664 239.607 l
335.742 239.607 l
335.742 246.170 l
334.664 246.170 l
334.664 245.154 l
334.404 245.561 334.102 245.863 333.758 246.061  c
333.414 246.248 333.013 246.342 332.555 246.342  c
331.794 246.342 331.216 246.107 330.820 245.639  c
330.435 245.170 330.242 244.482 330.242 243.576  c
h
332.961 239.451 m
332.961 239.451 l
h
339.035 237.748 m
339.035 239.607 l
341.254 239.607 l
341.254 240.451 l
339.035 240.451 l
339.035 244.014 l
339.035 244.545 339.108 244.889 339.254 245.045  c
339.400 245.191 339.697 245.264 340.145 245.264  c
341.254 245.264 l
341.254 246.170 l
340.145 246.170 l
339.311 246.170 338.733 246.014 338.410 245.701  c
338.098 245.389 337.941 244.826 337.941 244.014  c
337.941 240.451 l
337.160 240.451 l
337.160 239.607 l
337.941 239.607 l
337.941 237.748 l
339.035 237.748 l
h
348.287 242.623 m
348.287 243.139 l
343.318 243.139 l
343.370 243.889 343.594 244.456 343.990 244.842  c
344.396 245.227 344.954 245.420 345.662 245.420  c
346.079 245.420 346.480 245.373 346.865 245.279  c
347.261 245.175 347.652 245.019 348.037 244.811  c
348.037 245.842 l
347.641 245.998 347.240 246.118 346.834 246.201  c
346.428 246.295 346.016 246.342 345.600 246.342  c
344.558 246.342 343.730 246.040 343.115 245.436  c
342.501 244.821 342.193 243.993 342.193 242.951  c
342.193 241.878 342.485 241.029 343.068 240.404  c
343.652 239.769 344.433 239.451 345.412 239.451  c
346.298 239.451 346.995 239.738 347.506 240.311  c
348.027 240.873 348.287 241.644 348.287 242.623  c
h
347.209 242.295 m
347.199 241.712 347.032 241.243 346.709 240.889  c
346.386 240.535 345.959 240.357 345.428 240.357  c
344.824 240.357 344.339 240.529 343.975 240.873  c
343.620 241.217 343.417 241.696 343.365 242.311  c
347.209 242.295 l
h
353.857 240.607 m
353.732 240.545 353.597 240.498 353.451 240.467  c
353.316 240.425 353.160 240.404 352.982 240.404  c
352.378 240.404 351.910 240.602 351.576 240.998  c
351.253 241.394 351.092 241.967 351.092 242.717  c
351.092 246.170 l
350.014 246.170 l
350.014 239.607 l
351.092 239.607 l
351.092 240.623 l
351.321 240.227 351.618 239.936 351.982 239.748  c
352.347 239.550 352.790 239.451 353.311 239.451  c
353.383 239.451 353.462 239.456 353.545 239.467  c
353.639 239.477 353.738 239.493 353.842 239.514  c
353.857 240.607 l
h
358.793 237.045 m
359.871 237.045 l
359.871 246.170 l
358.793 246.170 l
358.793 237.045 l
h
367.752 242.623 m
367.752 243.139 l
362.783 243.139 l
362.835 243.889 363.059 244.456 363.455 244.842  c
363.861 245.227 364.419 245.420 365.127 245.420  c
365.544 245.420 365.945 245.373 366.330 245.279  c
366.726 245.175 367.117 245.019 367.502 244.811  c
367.502 245.842 l
367.106 245.998 366.705 246.118 366.299 246.201  c
365.893 246.295 365.481 246.342 365.064 246.342  c
364.023 246.342 363.195 246.040 362.580 245.436  c
361.965 244.821 361.658 243.993 361.658 242.951  c
361.658 241.878 361.950 241.029 362.533 240.404  c
363.117 239.769 363.898 239.451 364.877 239.451  c
365.762 239.451 366.460 239.738 366.971 240.311  c
367.492 240.873 367.752 241.644 367.752 242.623  c
h
366.674 242.295 m
366.663 241.712 366.497 241.243 366.174 240.889  c
365.851 240.535 365.424 240.357 364.893 240.357  c
364.288 240.357 363.804 240.529 363.439 240.873  c
363.085 241.217 362.882 241.696 362.830 242.311  c
366.674 242.295 l
h
378.059 239.857 m
378.059 240.873 l
377.746 240.696 377.439 240.566 377.137 240.482  c
376.835 240.399 376.527 240.357 376.215 240.357  c
375.507 240.357 374.960 240.581 374.574 241.029  c
374.189 241.467 373.996 242.087 373.996 242.889  c
373.996 243.691 374.189 244.316 374.574 244.764  c
374.960 245.201 375.507 245.420 376.215 245.420  c
376.527 245.420 376.835 245.378 377.137 245.295  c
377.439 245.212 377.746 245.087 378.059 244.920  c
378.059 245.920 l
377.757 246.055 377.444 246.160 377.121 246.232  c
376.798 246.305 376.454 246.342 376.090 246.342  c
375.100 246.342 374.314 246.035 373.730 245.420  c
373.147 244.795 372.855 243.951 372.855 242.889  c
372.855 241.826 373.147 240.988 373.730 240.373  c
374.324 239.758 375.137 239.451 376.168 239.451  c
376.491 239.451 376.809 239.488 377.121 239.561  c
377.444 239.623 377.757 239.722 378.059 239.857  c
h
385.391 242.201 m
385.391 246.170 l
384.312 246.170 l
384.312 242.248 l
384.312 241.623 384.188 241.160 383.938 240.857  c
383.698 240.545 383.339 240.389 382.859 240.389  c
382.276 240.389 381.812 240.576 381.469 240.951  c
381.135 241.316 380.969 241.821 380.969 242.467  c
380.969 246.170 l
379.891 246.170 l
379.891 237.045 l
380.969 237.045 l
380.969 240.623 l
381.229 240.227 381.531 239.936 381.875 239.748  c
382.229 239.550 382.635 239.451 383.094 239.451  c
383.844 239.451 384.411 239.686 384.797 240.154  c
385.193 240.613 385.391 241.295 385.391 242.201  c
h
390.074 240.357 m
389.501 240.357 389.043 240.587 388.699 241.045  c
388.366 241.493 388.199 242.107 388.199 242.889  c
388.199 243.680 388.366 244.300 388.699 244.748  c
389.033 245.196 389.491 245.420 390.074 245.420  c
390.647 245.420 391.100 245.196 391.434 244.748  c
391.777 244.290 391.949 243.670 391.949 242.889  c
391.949 242.118 391.777 241.503 391.434 241.045  c
391.100 240.587 390.647 240.357 390.074 240.357  c
h
390.074 239.451 m
391.012 239.451 391.746 239.758 392.277 240.373  c
392.819 240.977 393.090 241.816 393.090 242.889  c
393.090 243.962 392.819 244.805 392.277 245.420  c
391.746 246.035 391.012 246.342 390.074 246.342  c
389.137 246.342 388.397 246.035 387.855 245.420  c
387.324 244.805 387.059 243.962 387.059 242.889  c
387.059 241.816 387.324 240.977 387.855 240.373  c
388.397 239.758 389.137 239.451 390.074 239.451  c
h
399.604 239.857 m
399.604 240.873 l
399.291 240.696 398.984 240.566 398.682 240.482  c
398.380 240.399 398.072 240.357 397.760 240.357  c
397.051 240.357 396.505 240.581 396.119 241.029  c
395.734 241.467 395.541 242.087 395.541 242.889  c
395.541 243.691 395.734 244.316 396.119 244.764  c
396.505 245.201 397.051 245.420 397.760 245.420  c
398.072 245.420 398.380 245.378 398.682 245.295  c
398.984 245.212 399.291 245.087 399.604 244.920  c
399.604 245.920 l
399.301 246.055 398.989 246.160 398.666 246.232  c
398.343 246.305 397.999 246.342 397.635 246.342  c
396.645 246.342 395.859 246.035 395.275 245.420  c
394.692 244.795 394.400 243.951 394.400 242.889  c
394.400 241.826 394.692 240.988 395.275 240.373  c
395.869 239.758 396.682 239.451 397.713 239.451  c
398.036 239.451 398.354 239.488 398.666 239.561  c
398.989 239.623 399.301 239.722 399.604 239.857  c
h
404.014 240.357 m
403.441 240.357 402.982 240.587 402.639 241.045  c
402.305 241.493 402.139 242.107 402.139 242.889  c
402.139 243.680 402.305 244.300 402.639 244.748  c
402.972 245.196 403.430 245.420 404.014 245.420  c
404.587 245.420 405.040 245.196 405.373 244.748  c
405.717 244.290 405.889 243.670 405.889 242.889  c
405.889 242.118 405.717 241.503 405.373 241.045  c
405.040 240.587 404.587 240.357 404.014 240.357  c
h
404.014 239.451 m
404.951 239.451 405.686 239.758 406.217 240.373  c
406.758 240.977 407.029 241.816 407.029 242.889  c
407.029 243.962 406.758 244.805 406.217 245.420  c
405.686 246.035 404.951 246.342 404.014 246.342  c
403.076 246.342 402.337 246.035 401.795 245.420  c
401.264 244.805 400.998 243.962 400.998 242.889  c
400.998 241.816 401.264 240.977 401.795 240.373  c
402.337 239.758 403.076 239.451 404.014 239.451  c
h
408.809 237.045 m
409.887 237.045 l
409.887 246.170 l
408.809 246.170 l
408.809 237.045 l
h
415.127 242.873 m
414.262 242.873 413.658 242.972 413.314 243.170  c
412.981 243.368 412.814 243.706 412.814 244.186  c
412.814 244.571 412.939 244.878 413.189 245.107  c
413.450 245.326 413.794 245.436 414.221 245.436  c
414.825 245.436 415.304 245.227 415.658 244.811  c
416.023 244.383 416.205 243.816 416.205 243.107  c
416.205 242.873 l
415.127 242.873 l
h
417.283 242.420 m
417.283 246.170 l
416.205 246.170 l
416.205 245.170 l
415.955 245.566 415.648 245.863 415.283 246.061  c
414.919 246.248 414.471 246.342 413.939 246.342  c
413.262 246.342 412.726 246.154 412.330 245.779  c
411.934 245.394 411.736 244.889 411.736 244.264  c
411.736 243.524 411.981 242.967 412.471 242.592  c
412.971 242.217 413.710 242.029 414.689 242.029  c
416.205 242.029 l
416.205 241.920 l
416.205 241.420 416.038 241.035 415.705 240.764  c
415.382 240.493 414.929 240.357 414.346 240.357  c
413.971 240.357 413.601 240.404 413.236 240.498  c
412.882 240.592 412.544 240.727 412.221 240.904  c
412.221 239.904 l
412.617 239.748 412.997 239.633 413.361 239.561  c
413.736 239.488 414.101 239.451 414.455 239.451  c
415.403 239.451 416.111 239.696 416.580 240.186  c
417.049 240.675 417.283 241.420 417.283 242.420  c
h
420.574 237.748 m
420.574 239.607 l
422.793 239.607 l
422.793 240.451 l
420.574 240.451 l
420.574 244.014 l
420.574 244.545 420.647 244.889 420.793 245.045  c
420.939 245.191 421.236 245.264 421.684 245.264  c
422.793 245.264 l
422.793 246.170 l
421.684 246.170 l
420.850 246.170 420.272 246.014 419.949 245.701  c
419.637 245.389 419.480 244.826 419.480 244.014  c
419.480 240.451 l
418.699 240.451 l
418.699 239.607 l
419.480 239.607 l
419.480 237.748 l
420.574 237.748 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
481.058 239.436 m
481.620 239.561 482.058 239.816 482.370 240.201  c
482.693 240.576 482.854 241.045 482.854 241.607  c
482.854 242.472 482.558 243.144 481.964 243.623  c
481.370 244.092 480.526 244.326 479.433 244.326  c
479.068 244.326 478.688 244.290 478.292 244.217  c
477.907 244.144 477.511 244.035 477.104 243.889  c
477.104 242.748 l
477.427 242.936 477.782 243.081 478.167 243.186  c
478.563 243.279 478.974 243.326 479.401 243.326  c
480.141 243.326 480.703 243.180 481.089 242.889  c
481.485 242.597 481.683 242.170 481.683 241.607  c
481.683 241.097 481.500 240.696 481.136 240.404  c
480.771 240.113 480.271 239.967 479.636 239.967  c
478.604 239.967 l
478.604 238.998 l
479.683 238.998 l
480.256 238.998 480.698 238.883 481.011 238.654  c
481.323 238.415 481.479 238.076 481.479 237.639  c
481.479 237.191 481.318 236.847 480.995 236.607  c
480.683 236.368 480.229 236.248 479.636 236.248  c
479.302 236.248 478.948 236.285 478.573 236.357  c
478.209 236.420 477.802 236.524 477.354 236.670  c
477.354 235.623 l
477.813 235.498 478.235 235.404 478.620 235.342  c
479.016 235.279 479.386 235.248 479.729 235.248  c
480.636 235.248 481.349 235.451 481.870 235.857  c
482.391 236.264 482.651 236.816 482.651 237.514  c
482.651 238.003 482.511 238.415 482.229 238.748  c
481.959 239.081 481.568 239.311 481.058 239.436  c
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
532.478 120.000 m
480.000 120.000 l
480.000 156.971 l
S
newpath
480.000 164.971 m
485.000 152.971 l
480.000 155.971 l
475.000 152.971 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
480.000 194.971 m
480.000 217.005 l
S
newpath
480.000 225.005 m
485.000 213.005 l
480.000 216.005 l
475.000 213.005 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
